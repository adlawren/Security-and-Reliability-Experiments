//package com.adlawren.fault.tolerant.sort;

import java.io.*;
import java.lang.*;
import java.util.*;

/*
 * @author adlawren
 *
 * TODO: Add more details.
 * This is the integer heap for the fault tolerant sorting application.
 */

public class IntMinHeap {

	ArrayList<Integer> heap = null;

	private void percolateUp() {

		for (int i = heap.size() - 1; i > 1; i /= 2) {

			if (heap.get(i / 2) < heap.get(i)) {
				Collections.swap(heap, i, i / 2);
			} else {
				break;
			}
		}
	}

	// TODO: fix
	private void percolateDown() {

		// int i = 1;
		// while (i < heap.size()) {
		//
		// 	if (heap.get(i / 2) < heap.get(i)) {
		// 		Collections.swap(heap, i, i / 2);
		// 	} else {
		// 		break;
		// 	}
		// }
	}

	public IntMinHeap() {
		heap = new ArrayList<Integer>();
		heap.add(0); // Heap items start at index 1
	}

	public void insert(int toAdd) {
    heap.add(toAdd);
    percolateUp();
	}

	public int removeMin() {
		return -1;
	}

  public String toString() {

    StringBuilder builder = new StringBuilder();
    for (int i = 0; i < heap.size(); ++i) {
      builder.append(i);
    }

    return builder.toString();
  }
}
